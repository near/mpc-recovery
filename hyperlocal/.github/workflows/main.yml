name: Main

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '*.md'
    branches:
      - main
    tags:
      - '**'
  pull_request:
    paths-ignore:
      - '*.md'
    branches:
      - main

env:
  CARGO_TERM_COLOR:  always

jobs:
  codestyle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-nightly-cargo-${{ hashFiles('Cargo.lock') }}
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
        with:
          components: rustfmt
          rust-version: nightly
      - run: cargo fmt --all -- --check

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-stable-cargo-${{ hashFiles('Cargo.lock') }}
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
        with:
          components: clippy
      - run: cargo clippy --all-targets --all-features -- -D clippy::all

  compile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-stable-cargo-${{ hashFiles('Cargo.lock') }}
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
      - run: cargo check --all

  test:
    needs: [codestyle, lint, compile]
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        rust: [stable]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Rust
      uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}
    - name: Test
      run: cargo test

  publish-docs:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
      - uses: actions/checkout@v2
      - name: Generate Docs
        run: |
          cargo doc --no-deps
          echo "<meta http-equiv=refresh content=0;url=`echo ${{ github.repository  }} | cut -d / -f 2 | tr '-' '_'`/index.html>" > target/doc/index.html
      - name: Publish
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/doc

  publish-crate:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
      - uses: actions/checkout@v1
      - name: Publish
        if: env.CRATES_TOKEN
        shell: bash
        run: cargo publish --token ${{ env.CRATES_TOKEN }}
        env:
          CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}