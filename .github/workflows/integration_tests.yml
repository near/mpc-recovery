name: Integration tests
on:
  push:
    branches:
      - main
      - develop
  pull_request:
env:
  RUSTFLAGS: -D warnings
jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        run:
          [
            true,
            matrix.os == 'macos-latest' && github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged,
          ]
    runs-on: ${{ matrix.platform }}
    if: runner.name == 'ubuntu-latest' || runner.name == 'macos-latest' && github.event.pull_request.merged == true
    name: Integration tests
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "true"
      - uses: actions/checkout@v3
        with:
          repository: "near/pagoda-relayer-rs-fastauth"
          ref: "daniyar/custom-entrypoint"
          path: "relayer"
          ssh-key: ${{ secrets.RELAYER_DEPLOY_SSH_KEY }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: relayer
          tags: pagoda-relayer-rs-fastauth
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - uses: Swatinem/rust-cache@v1
      - name: Install Protoc
        uses: arduino/setup-protoc@v1.1.2
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: near/mpc-recovery:latest
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Test
        run: cargo test -p mpc-recovery-integration-tests
