name: Integration

on:
  workflow_run:
    workflows: ["Docker Image"]
    types:
      - completed

env:
  RUSTFLAGS: -D warnings
jobs:
  test:
    name: Test
    permissions:
      statuses: write
    strategy:
      matrix:
        # FIXME: macos-latest-xl is disabled since colima is erroring out right now
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - uses: actions/checkout@v3

      - name: Install Docker
        if: ${{ matrix.os == 'macos-latest-xl' }}
        run: |
          brew install docker
          colima start
          # Colima does not expose the Docker socket by default, we have to symlink it
          # https://github.com/abiosoft/colima/blob/main/docs/FAQ.md#cannot-connect-to-the-docker-daemon-at-unixvarrundockersock-is-the-docker-daemon-running
          sudo ln -sf $HOME/.colima/default/docker.sock /var/run/docker.sock

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull Relayer & Sandbox Docker Images
        run: |
          docker pull ghcr.io/near/pagoda-relayer-rs-fastauth
          docker pull ghcr.io/near/sandbox

      - name: Login to GCP Artifact Registry
        run: echo "$GOOGLE_CREDENTIALS" | docker login -u _json_key --password-stdin https://us-east1-docker.pkg.dev
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS_DEV }}

      - name: Pull MPC Recovery Docker Image
        run: |
          docker pull us-east1-docker.pkg.dev/pagoda-discovery-platform-dev/mpc-recovery/mpc-recovery-dev:${{ github.sha }}
          docker tag us-east1-docker.pkg.dev/pagoda-discovery-platform-dev/mpc-recovery/mpc-recovery-dev:${{ github.sha }} near/mpc-recovery:latest

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - uses: Swatinem/rust-cache@v1

      - name: Install Protoc
        uses: arduino/setup-protoc@v1.1.2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Test
        run: cargo test -p mpc-recovery-integration-tests --jobs 1 -- --test-threads 1
        env:
          RUST_LOG: INFO
          RUST_BACKTRACE: 1

      - name: Show Status on Pull Request
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.event.workflow_run.head_commit.id }} \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "state": "${{ github.event.workflow_run.conclusion }}",
            "context": "Integration Test Run",
            "target_url": "${{ github.event.workflow_run.html_url }}"
            }' \
          --fail
